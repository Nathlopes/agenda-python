# -*- coding: utf-8 -*-
"""Agenda de contatos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nrcxZ5QTMz5nS39UgJYiieNKnQyHUnhc

# **Agenda de contatos**
"""

import csv

agenda = {}

#função para adicionar contato
def add_novo_contato():
    global agenda
    numero_contatos = int(input('Quantos contatos deseja adicionar? '))
    for contato in range(numero_contatos):
        nome_contato = str(input('\nDigite o nome do contato: ')).lower()
        tel_contato = int(input('Digite o telefone do contato: '))
        mail_contato = str(input('Digite o e-mail do contato: ')).lower()
        twitter_contato = str(input('Digite o Twitter do contato: ')).lower()
        facebook_contato = str(input('Digite o Facebook do contato: ')).lower()
        agenda[nome_contato] = [tel_contato, mail_contato, twitter_contato, facebook_contato]
        print('\n')
    print('Contato(s) adicionado(s)')
    escolher_proxima_acao()

#Buscar contato
def busca_contato():
    global agenda
    nome_buscado = str(input('Digite o nome que deseja buscar na agenda:')).lower()
    keys = agenda.keys()
    print('Nome \t\t Telefone \t\t E-mail \t\t Twitter \t\t Facebook')
    for key in keys:
        if key == nome_buscado:
            print("{} \t\t {}\t\t {}\t\t {}\t\t {}".format(key, agenda[key][0], agenda[key][1], agenda[key][2],
                                                           agenda[key][3]))
    escolher_proxima_acao()
            
#Deletar contato
def remover_contato():
    global agenda
    nome_removido = str(input('Digite o nome que deseja remover da agenda:')).lower()
    if nome_removido in agenda.keys():
        agenda.pop(nome_removido, None)
        print('Contato removido!')
    else:
        print('Contato não cadastrado na agenda.')
    escolher_proxima_acao()


#Função para gerar um relatório
def gerar_relatorio():
    global agenda
    print('Nro \t Nome \t\t Telefone \t\t E-mail \t\t\t Twitter \t\t Facebook')
    for key in agenda.keys():
        print("{} \t {} \t\t {}\t\t {}\t\t\t {}\t\t {}".format(list(agenda).index(key), key, agenda[key][0], agenda[key][1], agenda[key][2],
                                                           agenda[key][3]))
    escolher_proxima_acao()

#Função para salvar todos os contatos
def salvar_contatos():
    global agenda
    with open('contatos.csv','w') as arquivo:
        csv.DictWriter(arquivo, agenda.keys(), delimiter=',')
        for key in agenda.keys():
            arquivo.write('%s, %s, %s, %s, %s\n' % (key, agenda[key][0], agenda[key][1], agenda[key][2], agenda[key][3]))
        print('Arquivo gerado com sucesso!')
    escolher_proxima_acao()

#Função menu da edição/alteração do contato
def opcao_edicao_contatos():
    print('Se deseja alterar o telefone do contato, digite 1')
    print('Se deseja alterar o e-mail do contato, digite 2')
    print('Se deseja alterar a conta do Twitter do contato, digite 3')
    print('Se deseja alterar a conta do Facebook do contato, digite 4')
    print('Se deseja alterar todos as informações, digite 5')
    dado_edicao = int(input('Desejo alterar a opção: '))
    return dado_edicao

#Função para Editar/alterar contato
def editar_contato():
    global agenda
    nome_editar = str(input('Digite o nome do contato cuja informação deseja editar: ')).lower()
    if nome_editar in agenda.keys():
        opcao_selecionada = opcao_edicao_contatos()
        if opcao_selecionada == 1:
            novo_telefone = int(input('\nNovo telefone será: '))
            agenda[nome_editar][0] = novo_telefone
            print('Telefone atualizado!')
            escolher_proxima_acao()
        elif opcao_selecionada == 2:
            novo_email = str(input('\nNovo e-mail será: ')).lower()
            agenda[nome_editar][1] = novo_email
            print('E-mail atualizado!')
            escolher_proxima_acao()
        elif opcao_selecionada == 3:
            novo_twitter = str(input('\nNovo Twitter será: ')).lower()
            agenda[nome_editar][2] = novo_twitter
            print('Twitter atualizado!')
            escolher_proxima_acao()
        elif opcao_selecionada == 4:
            novo_face = str(input('\nNovo Facebook será: ')).lower()
            agenda[nome_editar][3] = novo_face
            print('Facebook atualizado!')
            escolher_proxima_acao()
        elif opcao_selecionada == 5:
            novo_telefone = int(input('\nNovo telefone será:'))
            novo_email = str(input('\nNovo e-mail será: ')).lower()
            novo_twitter = str(input('\nNovo Twitter será: ')).lower()
            novo_face = str(input('\nNovo Facebook será: ')).lower()
            agenda[nome_editar] = [novo_telefone, novo_email, novo_twitter, novo_face]
            print('Dados atualizado!')
            escolher_proxima_acao()
        else:
            print('\nOpção selecionada não encontrada.')
    else:
        print('\nContato não cadastrado na agenda')

#Função para o menu principal
def opcao_menu_principal():
    print('~' * 50)
    print('Bem-vind@ a agenda telefônica Python!')
    print('~' * 50)
    print('Para continuar, escolha uma das opções disponíveis:\n')
    print('Digite 1 para inserir um novo contato;')
    print('Digite 2 para fazer uma consulta de um nome já cadastrado;')
    print('Digite 3 para remover um contato;')
    print('Digite 4 para alterar um contato já cadastrado;')
    print('Digite 5 para gerar relatório de contatos;')
    print('Digite 6 para exportar lista de contatos;')
    print('Digite 0 para sair.\n')
    return eval(input('Digite a opção: '))

#Função para terminar programa ou continuar
def escolher_proxima_acao():
    continuar = str(input('\nDeseja fazer mais alguma operação? S(sim)/N(não)'))
    if continuar.upper() == 'N':
        print('\nObrigada por utilizar a agenda Python!\nFim do programa')
        exit()

#menu do programa
item = 1
lista = [0, 1, 2, 3, 4, 5, 6]

while item:
    item = opcao_menu_principal()
    if item in lista:
        if item == 1:
            add_novo_contato()
        elif item == 2:
            busca_contato()
        elif item ==3:
            remover_contato()
        elif item == 4:
            editar_contato()
        elif item == 5:
            gerar_relatorio()
        elif item == 6:
            salvar_contatos()
        elif item == 0:
            print('\nObrigada por utilizar a agenda Python!\nFim do programa')